/*
Lidarr

Lidarr API docs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lidarr

import (
	"encoding/json"
	"time"
)

// Artist struct for Artist
type Artist struct {
	Id *int32 `json:"id,omitempty"`
	ArtistMetadataId *int32 `json:"artistMetadataId,omitempty"`
	CleanName NullableString `json:"cleanName,omitempty"`
	SortName NullableString `json:"sortName,omitempty"`
	Monitored *bool `json:"monitored,omitempty"`
	MonitorNewItems *NewItemMonitorTypes `json:"monitorNewItems,omitempty"`
	LastInfoSync NullableTime `json:"lastInfoSync,omitempty"`
	Path NullableString `json:"path,omitempty"`
	RootFolderPath NullableString `json:"rootFolderPath,omitempty"`
	Added *time.Time `json:"added,omitempty"`
	QualityProfileId *int32 `json:"qualityProfileId,omitempty"`
	MetadataProfileId *int32 `json:"metadataProfileId,omitempty"`
	Tags []*int32 `json:"tags,omitempty"`
	AddOptions *AddArtistOptions `json:"addOptions,omitempty"`
	Metadata *ArtistMetadataLazyLoaded `json:"metadata,omitempty"`
	QualityProfile *QualityProfileLazyLoaded `json:"qualityProfile,omitempty"`
	MetadataProfile *MetadataProfileLazyLoaded `json:"metadataProfile,omitempty"`
	Albums *AlbumListLazyLoaded `json:"albums,omitempty"`
	Name NullableString `json:"name,omitempty"`
	ForeignArtistId NullableString `json:"foreignArtistId,omitempty"`
}

// NewArtist instantiates a new Artist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtist() *Artist {
	this := Artist{}
	return &this
}

// NewArtistWithDefaults instantiates a new Artist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtistWithDefaults() *Artist {
	this := Artist{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Artist) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Artist) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Artist) SetId(v int32) {
	o.Id = &v
}

// GetArtistMetadataId returns the ArtistMetadataId field value if set, zero value otherwise.
func (o *Artist) GetArtistMetadataId() int32 {
	if o == nil || isNil(o.ArtistMetadataId) {
		var ret int32
		return ret
	}
	return *o.ArtistMetadataId
}

// GetArtistMetadataIdOk returns a tuple with the ArtistMetadataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetArtistMetadataIdOk() (*int32, bool) {
	if o == nil || isNil(o.ArtistMetadataId) {
    return nil, false
	}
	return o.ArtistMetadataId, true
}

// HasArtistMetadataId returns a boolean if a field has been set.
func (o *Artist) HasArtistMetadataId() bool {
	if o != nil && !isNil(o.ArtistMetadataId) {
		return true
	}

	return false
}

// SetArtistMetadataId gets a reference to the given int32 and assigns it to the ArtistMetadataId field.
func (o *Artist) SetArtistMetadataId(v int32) {
	o.ArtistMetadataId = &v
}

// GetCleanName returns the CleanName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Artist) GetCleanName() string {
	if o == nil || isNil(o.CleanName.Get()) {
		var ret string
		return ret
	}
	return *o.CleanName.Get()
}

// GetCleanNameOk returns a tuple with the CleanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artist) GetCleanNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CleanName.Get(), o.CleanName.IsSet()
}

// HasCleanName returns a boolean if a field has been set.
func (o *Artist) HasCleanName() bool {
	if o != nil && o.CleanName.IsSet() {
		return true
	}

	return false
}

// SetCleanName gets a reference to the given NullableString and assigns it to the CleanName field.
func (o *Artist) SetCleanName(v string) {
	o.CleanName.Set(&v)
}
// SetCleanNameNil sets the value for CleanName to be an explicit nil
func (o *Artist) SetCleanNameNil() {
	o.CleanName.Set(nil)
}

// UnsetCleanName ensures that no value is present for CleanName, not even an explicit nil
func (o *Artist) UnsetCleanName() {
	o.CleanName.Unset()
}

// GetSortName returns the SortName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Artist) GetSortName() string {
	if o == nil || isNil(o.SortName.Get()) {
		var ret string
		return ret
	}
	return *o.SortName.Get()
}

// GetSortNameOk returns a tuple with the SortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artist) GetSortNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.SortName.Get(), o.SortName.IsSet()
}

// HasSortName returns a boolean if a field has been set.
func (o *Artist) HasSortName() bool {
	if o != nil && o.SortName.IsSet() {
		return true
	}

	return false
}

// SetSortName gets a reference to the given NullableString and assigns it to the SortName field.
func (o *Artist) SetSortName(v string) {
	o.SortName.Set(&v)
}
// SetSortNameNil sets the value for SortName to be an explicit nil
func (o *Artist) SetSortNameNil() {
	o.SortName.Set(nil)
}

// UnsetSortName ensures that no value is present for SortName, not even an explicit nil
func (o *Artist) UnsetSortName() {
	o.SortName.Unset()
}

// GetMonitored returns the Monitored field value if set, zero value otherwise.
func (o *Artist) GetMonitored() bool {
	if o == nil || isNil(o.Monitored) {
		var ret bool
		return ret
	}
	return *o.Monitored
}

// GetMonitoredOk returns a tuple with the Monitored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetMonitoredOk() (*bool, bool) {
	if o == nil || isNil(o.Monitored) {
    return nil, false
	}
	return o.Monitored, true
}

// HasMonitored returns a boolean if a field has been set.
func (o *Artist) HasMonitored() bool {
	if o != nil && !isNil(o.Monitored) {
		return true
	}

	return false
}

// SetMonitored gets a reference to the given bool and assigns it to the Monitored field.
func (o *Artist) SetMonitored(v bool) {
	o.Monitored = &v
}

// GetMonitorNewItems returns the MonitorNewItems field value if set, zero value otherwise.
func (o *Artist) GetMonitorNewItems() NewItemMonitorTypes {
	if o == nil || isNil(o.MonitorNewItems) {
		var ret NewItemMonitorTypes
		return ret
	}
	return *o.MonitorNewItems
}

// GetMonitorNewItemsOk returns a tuple with the MonitorNewItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetMonitorNewItemsOk() (*NewItemMonitorTypes, bool) {
	if o == nil || isNil(o.MonitorNewItems) {
    return nil, false
	}
	return o.MonitorNewItems, true
}

// HasMonitorNewItems returns a boolean if a field has been set.
func (o *Artist) HasMonitorNewItems() bool {
	if o != nil && !isNil(o.MonitorNewItems) {
		return true
	}

	return false
}

// SetMonitorNewItems gets a reference to the given NewItemMonitorTypes and assigns it to the MonitorNewItems field.
func (o *Artist) SetMonitorNewItems(v NewItemMonitorTypes) {
	o.MonitorNewItems = &v
}

// GetLastInfoSync returns the LastInfoSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Artist) GetLastInfoSync() time.Time {
	if o == nil || isNil(o.LastInfoSync.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastInfoSync.Get()
}

// GetLastInfoSyncOk returns a tuple with the LastInfoSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artist) GetLastInfoSyncOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.LastInfoSync.Get(), o.LastInfoSync.IsSet()
}

// HasLastInfoSync returns a boolean if a field has been set.
func (o *Artist) HasLastInfoSync() bool {
	if o != nil && o.LastInfoSync.IsSet() {
		return true
	}

	return false
}

// SetLastInfoSync gets a reference to the given NullableTime and assigns it to the LastInfoSync field.
func (o *Artist) SetLastInfoSync(v time.Time) {
	o.LastInfoSync.Set(&v)
}
// SetLastInfoSyncNil sets the value for LastInfoSync to be an explicit nil
func (o *Artist) SetLastInfoSyncNil() {
	o.LastInfoSync.Set(nil)
}

// UnsetLastInfoSync ensures that no value is present for LastInfoSync, not even an explicit nil
func (o *Artist) UnsetLastInfoSync() {
	o.LastInfoSync.Unset()
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Artist) GetPath() string {
	if o == nil || isNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artist) GetPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *Artist) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *Artist) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *Artist) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *Artist) UnsetPath() {
	o.Path.Unset()
}

// GetRootFolderPath returns the RootFolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Artist) GetRootFolderPath() string {
	if o == nil || isNil(o.RootFolderPath.Get()) {
		var ret string
		return ret
	}
	return *o.RootFolderPath.Get()
}

// GetRootFolderPathOk returns a tuple with the RootFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artist) GetRootFolderPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RootFolderPath.Get(), o.RootFolderPath.IsSet()
}

// HasRootFolderPath returns a boolean if a field has been set.
func (o *Artist) HasRootFolderPath() bool {
	if o != nil && o.RootFolderPath.IsSet() {
		return true
	}

	return false
}

// SetRootFolderPath gets a reference to the given NullableString and assigns it to the RootFolderPath field.
func (o *Artist) SetRootFolderPath(v string) {
	o.RootFolderPath.Set(&v)
}
// SetRootFolderPathNil sets the value for RootFolderPath to be an explicit nil
func (o *Artist) SetRootFolderPathNil() {
	o.RootFolderPath.Set(nil)
}

// UnsetRootFolderPath ensures that no value is present for RootFolderPath, not even an explicit nil
func (o *Artist) UnsetRootFolderPath() {
	o.RootFolderPath.Unset()
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *Artist) GetAdded() time.Time {
	if o == nil || isNil(o.Added) {
		var ret time.Time
		return ret
	}
	return *o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetAddedOk() (*time.Time, bool) {
	if o == nil || isNil(o.Added) {
    return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *Artist) HasAdded() bool {
	if o != nil && !isNil(o.Added) {
		return true
	}

	return false
}

// SetAdded gets a reference to the given time.Time and assigns it to the Added field.
func (o *Artist) SetAdded(v time.Time) {
	o.Added = &v
}

// GetQualityProfileId returns the QualityProfileId field value if set, zero value otherwise.
func (o *Artist) GetQualityProfileId() int32 {
	if o == nil || isNil(o.QualityProfileId) {
		var ret int32
		return ret
	}
	return *o.QualityProfileId
}

// GetQualityProfileIdOk returns a tuple with the QualityProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetQualityProfileIdOk() (*int32, bool) {
	if o == nil || isNil(o.QualityProfileId) {
    return nil, false
	}
	return o.QualityProfileId, true
}

// HasQualityProfileId returns a boolean if a field has been set.
func (o *Artist) HasQualityProfileId() bool {
	if o != nil && !isNil(o.QualityProfileId) {
		return true
	}

	return false
}

// SetQualityProfileId gets a reference to the given int32 and assigns it to the QualityProfileId field.
func (o *Artist) SetQualityProfileId(v int32) {
	o.QualityProfileId = &v
}

// GetMetadataProfileId returns the MetadataProfileId field value if set, zero value otherwise.
func (o *Artist) GetMetadataProfileId() int32 {
	if o == nil || isNil(o.MetadataProfileId) {
		var ret int32
		return ret
	}
	return *o.MetadataProfileId
}

// GetMetadataProfileIdOk returns a tuple with the MetadataProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetMetadataProfileIdOk() (*int32, bool) {
	if o == nil || isNil(o.MetadataProfileId) {
    return nil, false
	}
	return o.MetadataProfileId, true
}

// HasMetadataProfileId returns a boolean if a field has been set.
func (o *Artist) HasMetadataProfileId() bool {
	if o != nil && !isNil(o.MetadataProfileId) {
		return true
	}

	return false
}

// SetMetadataProfileId gets a reference to the given int32 and assigns it to the MetadataProfileId field.
func (o *Artist) SetMetadataProfileId(v int32) {
	o.MetadataProfileId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Artist) GetTags() []*int32 {
	if o == nil {
		var ret []*int32
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artist) GetTagsOk() ([]*int32, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Artist) HasTags() bool {
	if o != nil && isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []int32 and assigns it to the Tags field.
func (o *Artist) SetTags(v []*int32) {
	o.Tags = v
}

// GetAddOptions returns the AddOptions field value if set, zero value otherwise.
func (o *Artist) GetAddOptions() AddArtistOptions {
	if o == nil || isNil(o.AddOptions) {
		var ret AddArtistOptions
		return ret
	}
	return *o.AddOptions
}

// GetAddOptionsOk returns a tuple with the AddOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetAddOptionsOk() (*AddArtistOptions, bool) {
	if o == nil || isNil(o.AddOptions) {
    return nil, false
	}
	return o.AddOptions, true
}

// HasAddOptions returns a boolean if a field has been set.
func (o *Artist) HasAddOptions() bool {
	if o != nil && !isNil(o.AddOptions) {
		return true
	}

	return false
}

// SetAddOptions gets a reference to the given AddArtistOptions and assigns it to the AddOptions field.
func (o *Artist) SetAddOptions(v AddArtistOptions) {
	o.AddOptions = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *Artist) GetMetadata() ArtistMetadataLazyLoaded {
	if o == nil || isNil(o.Metadata) {
		var ret ArtistMetadataLazyLoaded
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetMetadataOk() (*ArtistMetadataLazyLoaded, bool) {
	if o == nil || isNil(o.Metadata) {
    return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *Artist) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ArtistMetadataLazyLoaded and assigns it to the Metadata field.
func (o *Artist) SetMetadata(v ArtistMetadataLazyLoaded) {
	o.Metadata = &v
}

// GetQualityProfile returns the QualityProfile field value if set, zero value otherwise.
func (o *Artist) GetQualityProfile() QualityProfileLazyLoaded {
	if o == nil || isNil(o.QualityProfile) {
		var ret QualityProfileLazyLoaded
		return ret
	}
	return *o.QualityProfile
}

// GetQualityProfileOk returns a tuple with the QualityProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetQualityProfileOk() (*QualityProfileLazyLoaded, bool) {
	if o == nil || isNil(o.QualityProfile) {
    return nil, false
	}
	return o.QualityProfile, true
}

// HasQualityProfile returns a boolean if a field has been set.
func (o *Artist) HasQualityProfile() bool {
	if o != nil && !isNil(o.QualityProfile) {
		return true
	}

	return false
}

// SetQualityProfile gets a reference to the given QualityProfileLazyLoaded and assigns it to the QualityProfile field.
func (o *Artist) SetQualityProfile(v QualityProfileLazyLoaded) {
	o.QualityProfile = &v
}

// GetMetadataProfile returns the MetadataProfile field value if set, zero value otherwise.
func (o *Artist) GetMetadataProfile() MetadataProfileLazyLoaded {
	if o == nil || isNil(o.MetadataProfile) {
		var ret MetadataProfileLazyLoaded
		return ret
	}
	return *o.MetadataProfile
}

// GetMetadataProfileOk returns a tuple with the MetadataProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetMetadataProfileOk() (*MetadataProfileLazyLoaded, bool) {
	if o == nil || isNil(o.MetadataProfile) {
    return nil, false
	}
	return o.MetadataProfile, true
}

// HasMetadataProfile returns a boolean if a field has been set.
func (o *Artist) HasMetadataProfile() bool {
	if o != nil && !isNil(o.MetadataProfile) {
		return true
	}

	return false
}

// SetMetadataProfile gets a reference to the given MetadataProfileLazyLoaded and assigns it to the MetadataProfile field.
func (o *Artist) SetMetadataProfile(v MetadataProfileLazyLoaded) {
	o.MetadataProfile = &v
}

// GetAlbums returns the Albums field value if set, zero value otherwise.
func (o *Artist) GetAlbums() AlbumListLazyLoaded {
	if o == nil || isNil(o.Albums) {
		var ret AlbumListLazyLoaded
		return ret
	}
	return *o.Albums
}

// GetAlbumsOk returns a tuple with the Albums field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artist) GetAlbumsOk() (*AlbumListLazyLoaded, bool) {
	if o == nil || isNil(o.Albums) {
    return nil, false
	}
	return o.Albums, true
}

// HasAlbums returns a boolean if a field has been set.
func (o *Artist) HasAlbums() bool {
	if o != nil && !isNil(o.Albums) {
		return true
	}

	return false
}

// SetAlbums gets a reference to the given AlbumListLazyLoaded and assigns it to the Albums field.
func (o *Artist) SetAlbums(v AlbumListLazyLoaded) {
	o.Albums = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Artist) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artist) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *Artist) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *Artist) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *Artist) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *Artist) UnsetName() {
	o.Name.Unset()
}

// GetForeignArtistId returns the ForeignArtistId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Artist) GetForeignArtistId() string {
	if o == nil || isNil(o.ForeignArtistId.Get()) {
		var ret string
		return ret
	}
	return *o.ForeignArtistId.Get()
}

// GetForeignArtistIdOk returns a tuple with the ForeignArtistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artist) GetForeignArtistIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ForeignArtistId.Get(), o.ForeignArtistId.IsSet()
}

// HasForeignArtistId returns a boolean if a field has been set.
func (o *Artist) HasForeignArtistId() bool {
	if o != nil && o.ForeignArtistId.IsSet() {
		return true
	}

	return false
}

// SetForeignArtistId gets a reference to the given NullableString and assigns it to the ForeignArtistId field.
func (o *Artist) SetForeignArtistId(v string) {
	o.ForeignArtistId.Set(&v)
}
// SetForeignArtistIdNil sets the value for ForeignArtistId to be an explicit nil
func (o *Artist) SetForeignArtistIdNil() {
	o.ForeignArtistId.Set(nil)
}

// UnsetForeignArtistId ensures that no value is present for ForeignArtistId, not even an explicit nil
func (o *Artist) UnsetForeignArtistId() {
	o.ForeignArtistId.Unset()
}

func (o Artist) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ArtistMetadataId) {
		toSerialize["artistMetadataId"] = o.ArtistMetadataId
	}
	if o.CleanName.IsSet() {
		toSerialize["cleanName"] = o.CleanName.Get()
	}
	if o.SortName.IsSet() {
		toSerialize["sortName"] = o.SortName.Get()
	}
	if !isNil(o.Monitored) {
		toSerialize["monitored"] = o.Monitored
	}
	if !isNil(o.MonitorNewItems) {
		toSerialize["monitorNewItems"] = o.MonitorNewItems
	}
	if o.LastInfoSync.IsSet() {
		toSerialize["lastInfoSync"] = o.LastInfoSync.Get()
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if o.RootFolderPath.IsSet() {
		toSerialize["rootFolderPath"] = o.RootFolderPath.Get()
	}
	if !isNil(o.Added) {
		toSerialize["added"] = o.Added
	}
	if !isNil(o.QualityProfileId) {
		toSerialize["qualityProfileId"] = o.QualityProfileId
	}
	if !isNil(o.MetadataProfileId) {
		toSerialize["metadataProfileId"] = o.MetadataProfileId
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.AddOptions) {
		toSerialize["addOptions"] = o.AddOptions
	}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.QualityProfile) {
		toSerialize["qualityProfile"] = o.QualityProfile
	}
	if !isNil(o.MetadataProfile) {
		toSerialize["metadataProfile"] = o.MetadataProfile
	}
	if !isNil(o.Albums) {
		toSerialize["albums"] = o.Albums
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ForeignArtistId.IsSet() {
		toSerialize["foreignArtistId"] = o.ForeignArtistId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableArtist struct {
	value *Artist
	isSet bool
}

func (v NullableArtist) Get() *Artist {
	return v.value
}

func (v *NullableArtist) Set(val *Artist) {
	v.value = val
	v.isSet = true
}

func (v NullableArtist) IsSet() bool {
	return v.isSet
}

func (v *NullableArtist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtist(val *Artist) *NullableArtist {
	return &NullableArtist{value: val, isSet: true}
}

func (v NullableArtist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


