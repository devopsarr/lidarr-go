/*
Lidarr

Lidarr API docs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lidarr

import (
	"encoding/json"
)

// AlbumListLazyLoaded struct for AlbumListLazyLoaded
type AlbumListLazyLoaded struct {
	Value []*Album `json:"value,omitempty"`
	IsLoaded *bool `json:"isLoaded,omitempty"`
}

// NewAlbumListLazyLoaded instantiates a new AlbumListLazyLoaded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlbumListLazyLoaded() *AlbumListLazyLoaded {
	this := AlbumListLazyLoaded{}
	return &this
}

// NewAlbumListLazyLoadedWithDefaults instantiates a new AlbumListLazyLoaded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlbumListLazyLoadedWithDefaults() *AlbumListLazyLoaded {
	this := AlbumListLazyLoaded{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlbumListLazyLoaded) GetValue() []*Album {
	if o == nil {
		var ret []*Album
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlbumListLazyLoaded) GetValueOk() ([]*Album, bool) {
	if o == nil || isNil(o.Value) {
    return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AlbumListLazyLoaded) HasValue() bool {
	if o != nil && isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []Album and assigns it to the Value field.
func (o *AlbumListLazyLoaded) SetValue(v []*Album) {
	o.Value = v
}

// GetIsLoaded returns the IsLoaded field value if set, zero value otherwise.
func (o *AlbumListLazyLoaded) GetIsLoaded() bool {
	if o == nil || isNil(o.IsLoaded) {
		var ret bool
		return ret
	}
	return *o.IsLoaded
}

// GetIsLoadedOk returns a tuple with the IsLoaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlbumListLazyLoaded) GetIsLoadedOk() (*bool, bool) {
	if o == nil || isNil(o.IsLoaded) {
    return nil, false
	}
	return o.IsLoaded, true
}

// HasIsLoaded returns a boolean if a field has been set.
func (o *AlbumListLazyLoaded) HasIsLoaded() bool {
	if o != nil && !isNil(o.IsLoaded) {
		return true
	}

	return false
}

// SetIsLoaded gets a reference to the given bool and assigns it to the IsLoaded field.
func (o *AlbumListLazyLoaded) SetIsLoaded(v bool) {
	o.IsLoaded = &v
}

func (o AlbumListLazyLoaded) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if !isNil(o.IsLoaded) {
		toSerialize["isLoaded"] = o.IsLoaded
	}
	return json.Marshal(toSerialize)
}

type NullableAlbumListLazyLoaded struct {
	value *AlbumListLazyLoaded
	isSet bool
}

func (v NullableAlbumListLazyLoaded) Get() *AlbumListLazyLoaded {
	return v.value
}

func (v *NullableAlbumListLazyLoaded) Set(val *AlbumListLazyLoaded) {
	v.value = val
	v.isSet = true
}

func (v NullableAlbumListLazyLoaded) IsSet() bool {
	return v.isSet
}

func (v *NullableAlbumListLazyLoaded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlbumListLazyLoaded(val *AlbumListLazyLoaded) *NullableAlbumListLazyLoaded {
	return &NullableAlbumListLazyLoaded{value: val, isSet: true}
}

func (v NullableAlbumListLazyLoaded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlbumListLazyLoaded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


