/*
Lidarr

Lidarr API docs

API version: v2.4.3.4248
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lidarr

import (
	"encoding/json"
)

// checks if the MediumResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediumResource{}

// MediumResource struct for MediumResource
type MediumResource struct {
	MediumNumber *int32 `json:"mediumNumber,omitempty"`
	MediumName NullableString `json:"mediumName,omitempty"`
	MediumFormat NullableString `json:"mediumFormat,omitempty"`
}

// NewMediumResource instantiates a new MediumResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediumResource() *MediumResource {
	this := MediumResource{}
	return &this
}

// NewMediumResourceWithDefaults instantiates a new MediumResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediumResourceWithDefaults() *MediumResource {
	this := MediumResource{}
	return &this
}

// GetMediumNumber returns the MediumNumber field value if set, zero value otherwise.
func (o *MediumResource) GetMediumNumber() int32 {
	if o == nil || IsNil(o.MediumNumber) {
		var ret int32
		return ret
	}
	return *o.MediumNumber
}

// GetMediumNumberOk returns a tuple with the MediumNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediumResource) GetMediumNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.MediumNumber) {
		return nil, false
	}
	return o.MediumNumber, true
}

// HasMediumNumber returns a boolean if a field has been set.
func (o *MediumResource) HasMediumNumber() bool {
	if o != nil && !IsNil(o.MediumNumber) {
		return true
	}

	return false
}

// SetMediumNumber gets a reference to the given int32 and assigns it to the MediumNumber field.
func (o *MediumResource) SetMediumNumber(v int32) {
	o.MediumNumber = &v
}

// GetMediumName returns the MediumName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediumResource) GetMediumName() string {
	if o == nil || IsNil(o.MediumName.Get()) {
		var ret string
		return ret
	}
	return *o.MediumName.Get()
}

// GetMediumNameOk returns a tuple with the MediumName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediumResource) GetMediumNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MediumName.Get(), o.MediumName.IsSet()
}

// HasMediumName returns a boolean if a field has been set.
func (o *MediumResource) HasMediumName() bool {
	if o != nil && o.MediumName.IsSet() {
		return true
	}

	return false
}

// SetMediumName gets a reference to the given NullableString and assigns it to the MediumName field.
func (o *MediumResource) SetMediumName(v string) {
	o.MediumName.Set(&v)
}
// SetMediumNameNil sets the value for MediumName to be an explicit nil
func (o *MediumResource) SetMediumNameNil() {
	o.MediumName.Set(nil)
}

// UnsetMediumName ensures that no value is present for MediumName, not even an explicit nil
func (o *MediumResource) UnsetMediumName() {
	o.MediumName.Unset()
}

// GetMediumFormat returns the MediumFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediumResource) GetMediumFormat() string {
	if o == nil || IsNil(o.MediumFormat.Get()) {
		var ret string
		return ret
	}
	return *o.MediumFormat.Get()
}

// GetMediumFormatOk returns a tuple with the MediumFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediumResource) GetMediumFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MediumFormat.Get(), o.MediumFormat.IsSet()
}

// HasMediumFormat returns a boolean if a field has been set.
func (o *MediumResource) HasMediumFormat() bool {
	if o != nil && o.MediumFormat.IsSet() {
		return true
	}

	return false
}

// SetMediumFormat gets a reference to the given NullableString and assigns it to the MediumFormat field.
func (o *MediumResource) SetMediumFormat(v string) {
	o.MediumFormat.Set(&v)
}
// SetMediumFormatNil sets the value for MediumFormat to be an explicit nil
func (o *MediumResource) SetMediumFormatNil() {
	o.MediumFormat.Set(nil)
}

// UnsetMediumFormat ensures that no value is present for MediumFormat, not even an explicit nil
func (o *MediumResource) UnsetMediumFormat() {
	o.MediumFormat.Unset()
}

func (o MediumResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediumResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MediumNumber) {
		toSerialize["mediumNumber"] = o.MediumNumber
	}
	if o.MediumName.IsSet() {
		toSerialize["mediumName"] = o.MediumName.Get()
	}
	if o.MediumFormat.IsSet() {
		toSerialize["mediumFormat"] = o.MediumFormat.Get()
	}
	return toSerialize, nil
}

type NullableMediumResource struct {
	value *MediumResource
	isSet bool
}

func (v NullableMediumResource) Get() *MediumResource {
	return v.value
}

func (v *NullableMediumResource) Set(val *MediumResource) {
	v.value = val
	v.isSet = true
}

func (v NullableMediumResource) IsSet() bool {
	return v.isSet
}

func (v *NullableMediumResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediumResource(val *MediumResource) *NullableMediumResource {
	return &NullableMediumResource{value: val, isSet: true}
}

func (v NullableMediumResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediumResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


