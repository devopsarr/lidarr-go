/*
Lidarr

Lidarr API docs

API version: v2.9.6.4552
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lidarr

import (
	"encoding/json"
	"time"
)

// checks if the ArtistResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArtistResource{}

// ArtistResource struct for ArtistResource
type ArtistResource struct {
	Id *int32 `json:"id,omitempty"`
	Status *ArtistStatusType `json:"status,omitempty"`
	Ended *bool `json:"ended,omitempty"`
	ArtistName NullableString `json:"artistName,omitempty"`
	ForeignArtistId NullableString `json:"foreignArtistId,omitempty"`
	MbId NullableString `json:"mbId,omitempty"`
	TadbId *int32 `json:"tadbId,omitempty"`
	DiscogsId *int32 `json:"discogsId,omitempty"`
	AllMusicId NullableString `json:"allMusicId,omitempty"`
	Overview NullableString `json:"overview,omitempty"`
	ArtistType NullableString `json:"artistType,omitempty"`
	Disambiguation NullableString `json:"disambiguation,omitempty"`
	Links []Links `json:"links,omitempty"`
	NextAlbum *AlbumResource `json:"nextAlbum,omitempty"`
	LastAlbum *AlbumResource `json:"lastAlbum,omitempty"`
	Images []MediaCover `json:"images,omitempty"`
	Members []Member `json:"members,omitempty"`
	RemotePoster NullableString `json:"remotePoster,omitempty"`
	Path NullableString `json:"path,omitempty"`
	QualityProfileId *int32 `json:"qualityProfileId,omitempty"`
	MetadataProfileId *int32 `json:"metadataProfileId,omitempty"`
	Monitored *bool `json:"monitored,omitempty"`
	MonitorNewItems *NewItemMonitorTypes `json:"monitorNewItems,omitempty"`
	RootFolderPath NullableString `json:"rootFolderPath,omitempty"`
	Folder NullableString `json:"folder,omitempty"`
	Genres []string `json:"genres,omitempty"`
	CleanName NullableString `json:"cleanName,omitempty"`
	SortName NullableString `json:"sortName,omitempty"`
	Tags []int32 `json:"tags,omitempty"`
	Added *time.Time `json:"added,omitempty"`
	AddOptions *AddArtistOptions `json:"addOptions,omitempty"`
	Ratings *Ratings `json:"ratings,omitempty"`
	Statistics *ArtistStatisticsResource `json:"statistics,omitempty"`
}

// NewArtistResource instantiates a new ArtistResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtistResource() *ArtistResource {
	this := ArtistResource{}
	return &this
}

// NewArtistResourceWithDefaults instantiates a new ArtistResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtistResourceWithDefaults() *ArtistResource {
	this := ArtistResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ArtistResource) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ArtistResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ArtistResource) SetId(v int32) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ArtistResource) GetStatus() ArtistStatusType {
	if o == nil || IsNil(o.Status) {
		var ret ArtistStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetStatusOk() (*ArtistStatusType, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ArtistResource) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ArtistStatusType and assigns it to the Status field.
func (o *ArtistResource) SetStatus(v ArtistStatusType) {
	o.Status = &v
}

// GetEnded returns the Ended field value if set, zero value otherwise.
func (o *ArtistResource) GetEnded() bool {
	if o == nil || IsNil(o.Ended) {
		var ret bool
		return ret
	}
	return *o.Ended
}

// GetEndedOk returns a tuple with the Ended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetEndedOk() (*bool, bool) {
	if o == nil || IsNil(o.Ended) {
		return nil, false
	}
	return o.Ended, true
}

// HasEnded returns a boolean if a field has been set.
func (o *ArtistResource) HasEnded() bool {
	if o != nil && !IsNil(o.Ended) {
		return true
	}

	return false
}

// SetEnded gets a reference to the given bool and assigns it to the Ended field.
func (o *ArtistResource) SetEnded(v bool) {
	o.Ended = &v
}

// GetArtistName returns the ArtistName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetArtistName() string {
	if o == nil || IsNil(o.ArtistName.Get()) {
		var ret string
		return ret
	}
	return *o.ArtistName.Get()
}

// GetArtistNameOk returns a tuple with the ArtistName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetArtistNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ArtistName.Get(), o.ArtistName.IsSet()
}

// HasArtistName returns a boolean if a field has been set.
func (o *ArtistResource) HasArtistName() bool {
	if o != nil && o.ArtistName.IsSet() {
		return true
	}

	return false
}

// SetArtistName gets a reference to the given NullableString and assigns it to the ArtistName field.
func (o *ArtistResource) SetArtistName(v string) {
	o.ArtistName.Set(&v)
}
// SetArtistNameNil sets the value for ArtistName to be an explicit nil
func (o *ArtistResource) SetArtistNameNil() {
	o.ArtistName.Set(nil)
}

// UnsetArtistName ensures that no value is present for ArtistName, not even an explicit nil
func (o *ArtistResource) UnsetArtistName() {
	o.ArtistName.Unset()
}

// GetForeignArtistId returns the ForeignArtistId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetForeignArtistId() string {
	if o == nil || IsNil(o.ForeignArtistId.Get()) {
		var ret string
		return ret
	}
	return *o.ForeignArtistId.Get()
}

// GetForeignArtistIdOk returns a tuple with the ForeignArtistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetForeignArtistIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForeignArtistId.Get(), o.ForeignArtistId.IsSet()
}

// HasForeignArtistId returns a boolean if a field has been set.
func (o *ArtistResource) HasForeignArtistId() bool {
	if o != nil && o.ForeignArtistId.IsSet() {
		return true
	}

	return false
}

// SetForeignArtistId gets a reference to the given NullableString and assigns it to the ForeignArtistId field.
func (o *ArtistResource) SetForeignArtistId(v string) {
	o.ForeignArtistId.Set(&v)
}
// SetForeignArtistIdNil sets the value for ForeignArtistId to be an explicit nil
func (o *ArtistResource) SetForeignArtistIdNil() {
	o.ForeignArtistId.Set(nil)
}

// UnsetForeignArtistId ensures that no value is present for ForeignArtistId, not even an explicit nil
func (o *ArtistResource) UnsetForeignArtistId() {
	o.ForeignArtistId.Unset()
}

// GetMbId returns the MbId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetMbId() string {
	if o == nil || IsNil(o.MbId.Get()) {
		var ret string
		return ret
	}
	return *o.MbId.Get()
}

// GetMbIdOk returns a tuple with the MbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetMbIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MbId.Get(), o.MbId.IsSet()
}

// HasMbId returns a boolean if a field has been set.
func (o *ArtistResource) HasMbId() bool {
	if o != nil && o.MbId.IsSet() {
		return true
	}

	return false
}

// SetMbId gets a reference to the given NullableString and assigns it to the MbId field.
func (o *ArtistResource) SetMbId(v string) {
	o.MbId.Set(&v)
}
// SetMbIdNil sets the value for MbId to be an explicit nil
func (o *ArtistResource) SetMbIdNil() {
	o.MbId.Set(nil)
}

// UnsetMbId ensures that no value is present for MbId, not even an explicit nil
func (o *ArtistResource) UnsetMbId() {
	o.MbId.Unset()
}

// GetTadbId returns the TadbId field value if set, zero value otherwise.
func (o *ArtistResource) GetTadbId() int32 {
	if o == nil || IsNil(o.TadbId) {
		var ret int32
		return ret
	}
	return *o.TadbId
}

// GetTadbIdOk returns a tuple with the TadbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetTadbIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TadbId) {
		return nil, false
	}
	return o.TadbId, true
}

// HasTadbId returns a boolean if a field has been set.
func (o *ArtistResource) HasTadbId() bool {
	if o != nil && !IsNil(o.TadbId) {
		return true
	}

	return false
}

// SetTadbId gets a reference to the given int32 and assigns it to the TadbId field.
func (o *ArtistResource) SetTadbId(v int32) {
	o.TadbId = &v
}

// GetDiscogsId returns the DiscogsId field value if set, zero value otherwise.
func (o *ArtistResource) GetDiscogsId() int32 {
	if o == nil || IsNil(o.DiscogsId) {
		var ret int32
		return ret
	}
	return *o.DiscogsId
}

// GetDiscogsIdOk returns a tuple with the DiscogsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetDiscogsIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DiscogsId) {
		return nil, false
	}
	return o.DiscogsId, true
}

// HasDiscogsId returns a boolean if a field has been set.
func (o *ArtistResource) HasDiscogsId() bool {
	if o != nil && !IsNil(o.DiscogsId) {
		return true
	}

	return false
}

// SetDiscogsId gets a reference to the given int32 and assigns it to the DiscogsId field.
func (o *ArtistResource) SetDiscogsId(v int32) {
	o.DiscogsId = &v
}

// GetAllMusicId returns the AllMusicId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetAllMusicId() string {
	if o == nil || IsNil(o.AllMusicId.Get()) {
		var ret string
		return ret
	}
	return *o.AllMusicId.Get()
}

// GetAllMusicIdOk returns a tuple with the AllMusicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetAllMusicIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllMusicId.Get(), o.AllMusicId.IsSet()
}

// HasAllMusicId returns a boolean if a field has been set.
func (o *ArtistResource) HasAllMusicId() bool {
	if o != nil && o.AllMusicId.IsSet() {
		return true
	}

	return false
}

// SetAllMusicId gets a reference to the given NullableString and assigns it to the AllMusicId field.
func (o *ArtistResource) SetAllMusicId(v string) {
	o.AllMusicId.Set(&v)
}
// SetAllMusicIdNil sets the value for AllMusicId to be an explicit nil
func (o *ArtistResource) SetAllMusicIdNil() {
	o.AllMusicId.Set(nil)
}

// UnsetAllMusicId ensures that no value is present for AllMusicId, not even an explicit nil
func (o *ArtistResource) UnsetAllMusicId() {
	o.AllMusicId.Unset()
}

// GetOverview returns the Overview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetOverview() string {
	if o == nil || IsNil(o.Overview.Get()) {
		var ret string
		return ret
	}
	return *o.Overview.Get()
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetOverviewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Overview.Get(), o.Overview.IsSet()
}

// HasOverview returns a boolean if a field has been set.
func (o *ArtistResource) HasOverview() bool {
	if o != nil && o.Overview.IsSet() {
		return true
	}

	return false
}

// SetOverview gets a reference to the given NullableString and assigns it to the Overview field.
func (o *ArtistResource) SetOverview(v string) {
	o.Overview.Set(&v)
}
// SetOverviewNil sets the value for Overview to be an explicit nil
func (o *ArtistResource) SetOverviewNil() {
	o.Overview.Set(nil)
}

// UnsetOverview ensures that no value is present for Overview, not even an explicit nil
func (o *ArtistResource) UnsetOverview() {
	o.Overview.Unset()
}

// GetArtistType returns the ArtistType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetArtistType() string {
	if o == nil || IsNil(o.ArtistType.Get()) {
		var ret string
		return ret
	}
	return *o.ArtistType.Get()
}

// GetArtistTypeOk returns a tuple with the ArtistType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetArtistTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ArtistType.Get(), o.ArtistType.IsSet()
}

// HasArtistType returns a boolean if a field has been set.
func (o *ArtistResource) HasArtistType() bool {
	if o != nil && o.ArtistType.IsSet() {
		return true
	}

	return false
}

// SetArtistType gets a reference to the given NullableString and assigns it to the ArtistType field.
func (o *ArtistResource) SetArtistType(v string) {
	o.ArtistType.Set(&v)
}
// SetArtistTypeNil sets the value for ArtistType to be an explicit nil
func (o *ArtistResource) SetArtistTypeNil() {
	o.ArtistType.Set(nil)
}

// UnsetArtistType ensures that no value is present for ArtistType, not even an explicit nil
func (o *ArtistResource) UnsetArtistType() {
	o.ArtistType.Unset()
}

// GetDisambiguation returns the Disambiguation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetDisambiguation() string {
	if o == nil || IsNil(o.Disambiguation.Get()) {
		var ret string
		return ret
	}
	return *o.Disambiguation.Get()
}

// GetDisambiguationOk returns a tuple with the Disambiguation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetDisambiguationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Disambiguation.Get(), o.Disambiguation.IsSet()
}

// HasDisambiguation returns a boolean if a field has been set.
func (o *ArtistResource) HasDisambiguation() bool {
	if o != nil && o.Disambiguation.IsSet() {
		return true
	}

	return false
}

// SetDisambiguation gets a reference to the given NullableString and assigns it to the Disambiguation field.
func (o *ArtistResource) SetDisambiguation(v string) {
	o.Disambiguation.Set(&v)
}
// SetDisambiguationNil sets the value for Disambiguation to be an explicit nil
func (o *ArtistResource) SetDisambiguationNil() {
	o.Disambiguation.Set(nil)
}

// UnsetDisambiguation ensures that no value is present for Disambiguation, not even an explicit nil
func (o *ArtistResource) UnsetDisambiguation() {
	o.Disambiguation.Unset()
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetLinks() []Links {
	if o == nil {
		var ret []Links
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetLinksOk() ([]Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ArtistResource) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Links and assigns it to the Links field.
func (o *ArtistResource) SetLinks(v []Links) {
	o.Links = v
}

// GetNextAlbum returns the NextAlbum field value if set, zero value otherwise.
func (o *ArtistResource) GetNextAlbum() AlbumResource {
	if o == nil || IsNil(o.NextAlbum) {
		var ret AlbumResource
		return ret
	}
	return *o.NextAlbum
}

// GetNextAlbumOk returns a tuple with the NextAlbum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetNextAlbumOk() (*AlbumResource, bool) {
	if o == nil || IsNil(o.NextAlbum) {
		return nil, false
	}
	return o.NextAlbum, true
}

// HasNextAlbum returns a boolean if a field has been set.
func (o *ArtistResource) HasNextAlbum() bool {
	if o != nil && !IsNil(o.NextAlbum) {
		return true
	}

	return false
}

// SetNextAlbum gets a reference to the given AlbumResource and assigns it to the NextAlbum field.
func (o *ArtistResource) SetNextAlbum(v AlbumResource) {
	o.NextAlbum = &v
}

// GetLastAlbum returns the LastAlbum field value if set, zero value otherwise.
func (o *ArtistResource) GetLastAlbum() AlbumResource {
	if o == nil || IsNil(o.LastAlbum) {
		var ret AlbumResource
		return ret
	}
	return *o.LastAlbum
}

// GetLastAlbumOk returns a tuple with the LastAlbum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetLastAlbumOk() (*AlbumResource, bool) {
	if o == nil || IsNil(o.LastAlbum) {
		return nil, false
	}
	return o.LastAlbum, true
}

// HasLastAlbum returns a boolean if a field has been set.
func (o *ArtistResource) HasLastAlbum() bool {
	if o != nil && !IsNil(o.LastAlbum) {
		return true
	}

	return false
}

// SetLastAlbum gets a reference to the given AlbumResource and assigns it to the LastAlbum field.
func (o *ArtistResource) SetLastAlbum(v AlbumResource) {
	o.LastAlbum = &v
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetImages() []MediaCover {
	if o == nil {
		var ret []MediaCover
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetImagesOk() ([]MediaCover, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *ArtistResource) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []MediaCover and assigns it to the Images field.
func (o *ArtistResource) SetImages(v []MediaCover) {
	o.Images = v
}

// GetMembers returns the Members field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetMembers() []Member {
	if o == nil {
		var ret []Member
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetMembersOk() ([]Member, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *ArtistResource) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []Member and assigns it to the Members field.
func (o *ArtistResource) SetMembers(v []Member) {
	o.Members = v
}

// GetRemotePoster returns the RemotePoster field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetRemotePoster() string {
	if o == nil || IsNil(o.RemotePoster.Get()) {
		var ret string
		return ret
	}
	return *o.RemotePoster.Get()
}

// GetRemotePosterOk returns a tuple with the RemotePoster field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetRemotePosterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemotePoster.Get(), o.RemotePoster.IsSet()
}

// HasRemotePoster returns a boolean if a field has been set.
func (o *ArtistResource) HasRemotePoster() bool {
	if o != nil && o.RemotePoster.IsSet() {
		return true
	}

	return false
}

// SetRemotePoster gets a reference to the given NullableString and assigns it to the RemotePoster field.
func (o *ArtistResource) SetRemotePoster(v string) {
	o.RemotePoster.Set(&v)
}
// SetRemotePosterNil sets the value for RemotePoster to be an explicit nil
func (o *ArtistResource) SetRemotePosterNil() {
	o.RemotePoster.Set(nil)
}

// UnsetRemotePoster ensures that no value is present for RemotePoster, not even an explicit nil
func (o *ArtistResource) UnsetRemotePoster() {
	o.RemotePoster.Unset()
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetPath() string {
	if o == nil || IsNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *ArtistResource) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *ArtistResource) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *ArtistResource) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *ArtistResource) UnsetPath() {
	o.Path.Unset()
}

// GetQualityProfileId returns the QualityProfileId field value if set, zero value otherwise.
func (o *ArtistResource) GetQualityProfileId() int32 {
	if o == nil || IsNil(o.QualityProfileId) {
		var ret int32
		return ret
	}
	return *o.QualityProfileId
}

// GetQualityProfileIdOk returns a tuple with the QualityProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetQualityProfileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QualityProfileId) {
		return nil, false
	}
	return o.QualityProfileId, true
}

// HasQualityProfileId returns a boolean if a field has been set.
func (o *ArtistResource) HasQualityProfileId() bool {
	if o != nil && !IsNil(o.QualityProfileId) {
		return true
	}

	return false
}

// SetQualityProfileId gets a reference to the given int32 and assigns it to the QualityProfileId field.
func (o *ArtistResource) SetQualityProfileId(v int32) {
	o.QualityProfileId = &v
}

// GetMetadataProfileId returns the MetadataProfileId field value if set, zero value otherwise.
func (o *ArtistResource) GetMetadataProfileId() int32 {
	if o == nil || IsNil(o.MetadataProfileId) {
		var ret int32
		return ret
	}
	return *o.MetadataProfileId
}

// GetMetadataProfileIdOk returns a tuple with the MetadataProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetMetadataProfileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MetadataProfileId) {
		return nil, false
	}
	return o.MetadataProfileId, true
}

// HasMetadataProfileId returns a boolean if a field has been set.
func (o *ArtistResource) HasMetadataProfileId() bool {
	if o != nil && !IsNil(o.MetadataProfileId) {
		return true
	}

	return false
}

// SetMetadataProfileId gets a reference to the given int32 and assigns it to the MetadataProfileId field.
func (o *ArtistResource) SetMetadataProfileId(v int32) {
	o.MetadataProfileId = &v
}

// GetMonitored returns the Monitored field value if set, zero value otherwise.
func (o *ArtistResource) GetMonitored() bool {
	if o == nil || IsNil(o.Monitored) {
		var ret bool
		return ret
	}
	return *o.Monitored
}

// GetMonitoredOk returns a tuple with the Monitored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetMonitoredOk() (*bool, bool) {
	if o == nil || IsNil(o.Monitored) {
		return nil, false
	}
	return o.Monitored, true
}

// HasMonitored returns a boolean if a field has been set.
func (o *ArtistResource) HasMonitored() bool {
	if o != nil && !IsNil(o.Monitored) {
		return true
	}

	return false
}

// SetMonitored gets a reference to the given bool and assigns it to the Monitored field.
func (o *ArtistResource) SetMonitored(v bool) {
	o.Monitored = &v
}

// GetMonitorNewItems returns the MonitorNewItems field value if set, zero value otherwise.
func (o *ArtistResource) GetMonitorNewItems() NewItemMonitorTypes {
	if o == nil || IsNil(o.MonitorNewItems) {
		var ret NewItemMonitorTypes
		return ret
	}
	return *o.MonitorNewItems
}

// GetMonitorNewItemsOk returns a tuple with the MonitorNewItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetMonitorNewItemsOk() (*NewItemMonitorTypes, bool) {
	if o == nil || IsNil(o.MonitorNewItems) {
		return nil, false
	}
	return o.MonitorNewItems, true
}

// HasMonitorNewItems returns a boolean if a field has been set.
func (o *ArtistResource) HasMonitorNewItems() bool {
	if o != nil && !IsNil(o.MonitorNewItems) {
		return true
	}

	return false
}

// SetMonitorNewItems gets a reference to the given NewItemMonitorTypes and assigns it to the MonitorNewItems field.
func (o *ArtistResource) SetMonitorNewItems(v NewItemMonitorTypes) {
	o.MonitorNewItems = &v
}

// GetRootFolderPath returns the RootFolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetRootFolderPath() string {
	if o == nil || IsNil(o.RootFolderPath.Get()) {
		var ret string
		return ret
	}
	return *o.RootFolderPath.Get()
}

// GetRootFolderPathOk returns a tuple with the RootFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetRootFolderPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RootFolderPath.Get(), o.RootFolderPath.IsSet()
}

// HasRootFolderPath returns a boolean if a field has been set.
func (o *ArtistResource) HasRootFolderPath() bool {
	if o != nil && o.RootFolderPath.IsSet() {
		return true
	}

	return false
}

// SetRootFolderPath gets a reference to the given NullableString and assigns it to the RootFolderPath field.
func (o *ArtistResource) SetRootFolderPath(v string) {
	o.RootFolderPath.Set(&v)
}
// SetRootFolderPathNil sets the value for RootFolderPath to be an explicit nil
func (o *ArtistResource) SetRootFolderPathNil() {
	o.RootFolderPath.Set(nil)
}

// UnsetRootFolderPath ensures that no value is present for RootFolderPath, not even an explicit nil
func (o *ArtistResource) UnsetRootFolderPath() {
	o.RootFolderPath.Unset()
}

// GetFolder returns the Folder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetFolder() string {
	if o == nil || IsNil(o.Folder.Get()) {
		var ret string
		return ret
	}
	return *o.Folder.Get()
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Folder.Get(), o.Folder.IsSet()
}

// HasFolder returns a boolean if a field has been set.
func (o *ArtistResource) HasFolder() bool {
	if o != nil && o.Folder.IsSet() {
		return true
	}

	return false
}

// SetFolder gets a reference to the given NullableString and assigns it to the Folder field.
func (o *ArtistResource) SetFolder(v string) {
	o.Folder.Set(&v)
}
// SetFolderNil sets the value for Folder to be an explicit nil
func (o *ArtistResource) SetFolderNil() {
	o.Folder.Set(nil)
}

// UnsetFolder ensures that no value is present for Folder, not even an explicit nil
func (o *ArtistResource) UnsetFolder() {
	o.Folder.Unset()
}

// GetGenres returns the Genres field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetGenres() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetGenresOk() ([]string, bool) {
	if o == nil || IsNil(o.Genres) {
		return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *ArtistResource) HasGenres() bool {
	if o != nil && !IsNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *ArtistResource) SetGenres(v []string) {
	o.Genres = v
}

// GetCleanName returns the CleanName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetCleanName() string {
	if o == nil || IsNil(o.CleanName.Get()) {
		var ret string
		return ret
	}
	return *o.CleanName.Get()
}

// GetCleanNameOk returns a tuple with the CleanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetCleanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CleanName.Get(), o.CleanName.IsSet()
}

// HasCleanName returns a boolean if a field has been set.
func (o *ArtistResource) HasCleanName() bool {
	if o != nil && o.CleanName.IsSet() {
		return true
	}

	return false
}

// SetCleanName gets a reference to the given NullableString and assigns it to the CleanName field.
func (o *ArtistResource) SetCleanName(v string) {
	o.CleanName.Set(&v)
}
// SetCleanNameNil sets the value for CleanName to be an explicit nil
func (o *ArtistResource) SetCleanNameNil() {
	o.CleanName.Set(nil)
}

// UnsetCleanName ensures that no value is present for CleanName, not even an explicit nil
func (o *ArtistResource) UnsetCleanName() {
	o.CleanName.Unset()
}

// GetSortName returns the SortName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetSortName() string {
	if o == nil || IsNil(o.SortName.Get()) {
		var ret string
		return ret
	}
	return *o.SortName.Get()
}

// GetSortNameOk returns a tuple with the SortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetSortNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SortName.Get(), o.SortName.IsSet()
}

// HasSortName returns a boolean if a field has been set.
func (o *ArtistResource) HasSortName() bool {
	if o != nil && o.SortName.IsSet() {
		return true
	}

	return false
}

// SetSortName gets a reference to the given NullableString and assigns it to the SortName field.
func (o *ArtistResource) SetSortName(v string) {
	o.SortName.Set(&v)
}
// SetSortNameNil sets the value for SortName to be an explicit nil
func (o *ArtistResource) SetSortNameNil() {
	o.SortName.Set(nil)
}

// UnsetSortName ensures that no value is present for SortName, not even an explicit nil
func (o *ArtistResource) UnsetSortName() {
	o.SortName.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtistResource) GetTags() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtistResource) GetTagsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ArtistResource) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []int32 and assigns it to the Tags field.
func (o *ArtistResource) SetTags(v []int32) {
	o.Tags = v
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *ArtistResource) GetAdded() time.Time {
	if o == nil || IsNil(o.Added) {
		var ret time.Time
		return ret
	}
	return *o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetAddedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Added) {
		return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *ArtistResource) HasAdded() bool {
	if o != nil && !IsNil(o.Added) {
		return true
	}

	return false
}

// SetAdded gets a reference to the given time.Time and assigns it to the Added field.
func (o *ArtistResource) SetAdded(v time.Time) {
	o.Added = &v
}

// GetAddOptions returns the AddOptions field value if set, zero value otherwise.
func (o *ArtistResource) GetAddOptions() AddArtistOptions {
	if o == nil || IsNil(o.AddOptions) {
		var ret AddArtistOptions
		return ret
	}
	return *o.AddOptions
}

// GetAddOptionsOk returns a tuple with the AddOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetAddOptionsOk() (*AddArtistOptions, bool) {
	if o == nil || IsNil(o.AddOptions) {
		return nil, false
	}
	return o.AddOptions, true
}

// HasAddOptions returns a boolean if a field has been set.
func (o *ArtistResource) HasAddOptions() bool {
	if o != nil && !IsNil(o.AddOptions) {
		return true
	}

	return false
}

// SetAddOptions gets a reference to the given AddArtistOptions and assigns it to the AddOptions field.
func (o *ArtistResource) SetAddOptions(v AddArtistOptions) {
	o.AddOptions = &v
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *ArtistResource) GetRatings() Ratings {
	if o == nil || IsNil(o.Ratings) {
		var ret Ratings
		return ret
	}
	return *o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetRatingsOk() (*Ratings, bool) {
	if o == nil || IsNil(o.Ratings) {
		return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *ArtistResource) HasRatings() bool {
	if o != nil && !IsNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given Ratings and assigns it to the Ratings field.
func (o *ArtistResource) SetRatings(v Ratings) {
	o.Ratings = &v
}

// GetStatistics returns the Statistics field value if set, zero value otherwise.
func (o *ArtistResource) GetStatistics() ArtistStatisticsResource {
	if o == nil || IsNil(o.Statistics) {
		var ret ArtistStatisticsResource
		return ret
	}
	return *o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtistResource) GetStatisticsOk() (*ArtistStatisticsResource, bool) {
	if o == nil || IsNil(o.Statistics) {
		return nil, false
	}
	return o.Statistics, true
}

// HasStatistics returns a boolean if a field has been set.
func (o *ArtistResource) HasStatistics() bool {
	if o != nil && !IsNil(o.Statistics) {
		return true
	}

	return false
}

// SetStatistics gets a reference to the given ArtistStatisticsResource and assigns it to the Statistics field.
func (o *ArtistResource) SetStatistics(v ArtistStatisticsResource) {
	o.Statistics = &v
}

func (o ArtistResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtistResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Ended) {
		toSerialize["ended"] = o.Ended
	}
	if o.ArtistName.IsSet() {
		toSerialize["artistName"] = o.ArtistName.Get()
	}
	if o.ForeignArtistId.IsSet() {
		toSerialize["foreignArtistId"] = o.ForeignArtistId.Get()
	}
	if o.MbId.IsSet() {
		toSerialize["mbId"] = o.MbId.Get()
	}
	if !IsNil(o.TadbId) {
		toSerialize["tadbId"] = o.TadbId
	}
	if !IsNil(o.DiscogsId) {
		toSerialize["discogsId"] = o.DiscogsId
	}
	if o.AllMusicId.IsSet() {
		toSerialize["allMusicId"] = o.AllMusicId.Get()
	}
	if o.Overview.IsSet() {
		toSerialize["overview"] = o.Overview.Get()
	}
	if o.ArtistType.IsSet() {
		toSerialize["artistType"] = o.ArtistType.Get()
	}
	if o.Disambiguation.IsSet() {
		toSerialize["disambiguation"] = o.Disambiguation.Get()
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.NextAlbum) {
		toSerialize["nextAlbum"] = o.NextAlbum
	}
	if !IsNil(o.LastAlbum) {
		toSerialize["lastAlbum"] = o.LastAlbum
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.Members != nil {
		toSerialize["members"] = o.Members
	}
	if o.RemotePoster.IsSet() {
		toSerialize["remotePoster"] = o.RemotePoster.Get()
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if !IsNil(o.QualityProfileId) {
		toSerialize["qualityProfileId"] = o.QualityProfileId
	}
	if !IsNil(o.MetadataProfileId) {
		toSerialize["metadataProfileId"] = o.MetadataProfileId
	}
	if !IsNil(o.Monitored) {
		toSerialize["monitored"] = o.Monitored
	}
	if !IsNil(o.MonitorNewItems) {
		toSerialize["monitorNewItems"] = o.MonitorNewItems
	}
	if o.RootFolderPath.IsSet() {
		toSerialize["rootFolderPath"] = o.RootFolderPath.Get()
	}
	if o.Folder.IsSet() {
		toSerialize["folder"] = o.Folder.Get()
	}
	if o.Genres != nil {
		toSerialize["genres"] = o.Genres
	}
	if o.CleanName.IsSet() {
		toSerialize["cleanName"] = o.CleanName.Get()
	}
	if o.SortName.IsSet() {
		toSerialize["sortName"] = o.SortName.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Added) {
		toSerialize["added"] = o.Added
	}
	if !IsNil(o.AddOptions) {
		toSerialize["addOptions"] = o.AddOptions
	}
	if !IsNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	if !IsNil(o.Statistics) {
		toSerialize["statistics"] = o.Statistics
	}
	return toSerialize, nil
}

type NullableArtistResource struct {
	value *ArtistResource
	isSet bool
}

func (v NullableArtistResource) Get() *ArtistResource {
	return v.value
}

func (v *NullableArtistResource) Set(val *ArtistResource) {
	v.value = val
	v.isSet = true
}

func (v NullableArtistResource) IsSet() bool {
	return v.isSet
}

func (v *NullableArtistResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtistResource(val *ArtistResource) *NullableArtistResource {
	return &NullableArtistResource{value: val, isSet: true}
}

func (v NullableArtistResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtistResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


