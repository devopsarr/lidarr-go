/*
Lidarr

Lidarr API docs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lidarr

import (
	"encoding/json"
)

// AlbumReleaseLazyLoaded struct for AlbumReleaseLazyLoaded
type AlbumReleaseLazyLoaded struct {
	Value *AlbumRelease `json:"value,omitempty"`
	IsLoaded *bool `json:"isLoaded,omitempty"`
}

// NewAlbumReleaseLazyLoaded instantiates a new AlbumReleaseLazyLoaded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlbumReleaseLazyLoaded() *AlbumReleaseLazyLoaded {
	this := AlbumReleaseLazyLoaded{}
	return &this
}

// NewAlbumReleaseLazyLoadedWithDefaults instantiates a new AlbumReleaseLazyLoaded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlbumReleaseLazyLoadedWithDefaults() *AlbumReleaseLazyLoaded {
	this := AlbumReleaseLazyLoaded{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AlbumReleaseLazyLoaded) GetValue() AlbumRelease {
	if o == nil || isNil(o.Value) {
		var ret AlbumRelease
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlbumReleaseLazyLoaded) GetValueOk() (*AlbumRelease, bool) {
	if o == nil || isNil(o.Value) {
    return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AlbumReleaseLazyLoaded) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given AlbumRelease and assigns it to the Value field.
func (o *AlbumReleaseLazyLoaded) SetValue(v AlbumRelease) {
	o.Value = &v
}

// GetIsLoaded returns the IsLoaded field value if set, zero value otherwise.
func (o *AlbumReleaseLazyLoaded) GetIsLoaded() bool {
	if o == nil || isNil(o.IsLoaded) {
		var ret bool
		return ret
	}
	return *o.IsLoaded
}

// GetIsLoadedOk returns a tuple with the IsLoaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlbumReleaseLazyLoaded) GetIsLoadedOk() (*bool, bool) {
	if o == nil || isNil(o.IsLoaded) {
    return nil, false
	}
	return o.IsLoaded, true
}

// HasIsLoaded returns a boolean if a field has been set.
func (o *AlbumReleaseLazyLoaded) HasIsLoaded() bool {
	if o != nil && !isNil(o.IsLoaded) {
		return true
	}

	return false
}

// SetIsLoaded gets a reference to the given bool and assigns it to the IsLoaded field.
func (o *AlbumReleaseLazyLoaded) SetIsLoaded(v bool) {
	o.IsLoaded = &v
}

func (o AlbumReleaseLazyLoaded) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !isNil(o.IsLoaded) {
		toSerialize["isLoaded"] = o.IsLoaded
	}
	return json.Marshal(toSerialize)
}

type NullableAlbumReleaseLazyLoaded struct {
	value *AlbumReleaseLazyLoaded
	isSet bool
}

func (v NullableAlbumReleaseLazyLoaded) Get() *AlbumReleaseLazyLoaded {
	return v.value
}

func (v *NullableAlbumReleaseLazyLoaded) Set(val *AlbumReleaseLazyLoaded) {
	v.value = val
	v.isSet = true
}

func (v NullableAlbumReleaseLazyLoaded) IsSet() bool {
	return v.isSet
}

func (v *NullableAlbumReleaseLazyLoaded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlbumReleaseLazyLoaded(val *AlbumReleaseLazyLoaded) *NullableAlbumReleaseLazyLoaded {
	return &NullableAlbumReleaseLazyLoaded{value: val, isSet: true}
}

func (v NullableAlbumReleaseLazyLoaded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlbumReleaseLazyLoaded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


