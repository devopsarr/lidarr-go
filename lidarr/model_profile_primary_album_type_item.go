/*
Lidarr

Lidarr API docs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lidarr

import (
	"encoding/json"
)

// ProfilePrimaryAlbumTypeItem struct for ProfilePrimaryAlbumTypeItem
type ProfilePrimaryAlbumTypeItem struct {
	PrimaryAlbumType *PrimaryAlbumType `json:"primaryAlbumType,omitempty"`
	Allowed *bool `json:"allowed,omitempty"`
}

// NewProfilePrimaryAlbumTypeItem instantiates a new ProfilePrimaryAlbumTypeItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfilePrimaryAlbumTypeItem() *ProfilePrimaryAlbumTypeItem {
	this := ProfilePrimaryAlbumTypeItem{}
	return &this
}

// NewProfilePrimaryAlbumTypeItemWithDefaults instantiates a new ProfilePrimaryAlbumTypeItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfilePrimaryAlbumTypeItemWithDefaults() *ProfilePrimaryAlbumTypeItem {
	this := ProfilePrimaryAlbumTypeItem{}
	return &this
}

// GetPrimaryAlbumType returns the PrimaryAlbumType field value if set, zero value otherwise.
func (o *ProfilePrimaryAlbumTypeItem) GetPrimaryAlbumType() PrimaryAlbumType {
	if o == nil || isNil(o.PrimaryAlbumType) {
		var ret PrimaryAlbumType
		return ret
	}
	return *o.PrimaryAlbumType
}

// GetPrimaryAlbumTypeOk returns a tuple with the PrimaryAlbumType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfilePrimaryAlbumTypeItem) GetPrimaryAlbumTypeOk() (*PrimaryAlbumType, bool) {
	if o == nil || isNil(o.PrimaryAlbumType) {
    return nil, false
	}
	return o.PrimaryAlbumType, true
}

// HasPrimaryAlbumType returns a boolean if a field has been set.
func (o *ProfilePrimaryAlbumTypeItem) HasPrimaryAlbumType() bool {
	if o != nil && !isNil(o.PrimaryAlbumType) {
		return true
	}

	return false
}

// SetPrimaryAlbumType gets a reference to the given PrimaryAlbumType and assigns it to the PrimaryAlbumType field.
func (o *ProfilePrimaryAlbumTypeItem) SetPrimaryAlbumType(v PrimaryAlbumType) {
	o.PrimaryAlbumType = &v
}

// GetAllowed returns the Allowed field value if set, zero value otherwise.
func (o *ProfilePrimaryAlbumTypeItem) GetAllowed() bool {
	if o == nil || isNil(o.Allowed) {
		var ret bool
		return ret
	}
	return *o.Allowed
}

// GetAllowedOk returns a tuple with the Allowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfilePrimaryAlbumTypeItem) GetAllowedOk() (*bool, bool) {
	if o == nil || isNil(o.Allowed) {
    return nil, false
	}
	return o.Allowed, true
}

// HasAllowed returns a boolean if a field has been set.
func (o *ProfilePrimaryAlbumTypeItem) HasAllowed() bool {
	if o != nil && !isNil(o.Allowed) {
		return true
	}

	return false
}

// SetAllowed gets a reference to the given bool and assigns it to the Allowed field.
func (o *ProfilePrimaryAlbumTypeItem) SetAllowed(v bool) {
	o.Allowed = &v
}

func (o ProfilePrimaryAlbumTypeItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PrimaryAlbumType) {
		toSerialize["primaryAlbumType"] = o.PrimaryAlbumType
	}
	if !isNil(o.Allowed) {
		toSerialize["allowed"] = o.Allowed
	}
	return json.Marshal(toSerialize)
}

type NullableProfilePrimaryAlbumTypeItem struct {
	value *ProfilePrimaryAlbumTypeItem
	isSet bool
}

func (v NullableProfilePrimaryAlbumTypeItem) Get() *ProfilePrimaryAlbumTypeItem {
	return v.value
}

func (v *NullableProfilePrimaryAlbumTypeItem) Set(val *ProfilePrimaryAlbumTypeItem) {
	v.value = val
	v.isSet = true
}

func (v NullableProfilePrimaryAlbumTypeItem) IsSet() bool {
	return v.isSet
}

func (v *NullableProfilePrimaryAlbumTypeItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfilePrimaryAlbumTypeItem(val *ProfilePrimaryAlbumTypeItem) *NullableProfilePrimaryAlbumTypeItem {
	return &NullableProfilePrimaryAlbumTypeItem{value: val, isSet: true}
}

func (v NullableProfilePrimaryAlbumTypeItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfilePrimaryAlbumTypeItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


