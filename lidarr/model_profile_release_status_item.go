/*
Lidarr

Lidarr API docs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lidarr

import (
	"encoding/json"
)

// ProfileReleaseStatusItem struct for ProfileReleaseStatusItem
type ProfileReleaseStatusItem struct {
	ReleaseStatus *ReleaseStatus `json:"releaseStatus,omitempty"`
	Allowed *bool `json:"allowed,omitempty"`
}

// NewProfileReleaseStatusItem instantiates a new ProfileReleaseStatusItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileReleaseStatusItem() *ProfileReleaseStatusItem {
	this := ProfileReleaseStatusItem{}
	return &this
}

// NewProfileReleaseStatusItemWithDefaults instantiates a new ProfileReleaseStatusItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileReleaseStatusItemWithDefaults() *ProfileReleaseStatusItem {
	this := ProfileReleaseStatusItem{}
	return &this
}

// GetReleaseStatus returns the ReleaseStatus field value if set, zero value otherwise.
func (o *ProfileReleaseStatusItem) GetReleaseStatus() ReleaseStatus {
	if o == nil || isNil(o.ReleaseStatus) {
		var ret ReleaseStatus
		return ret
	}
	return *o.ReleaseStatus
}

// GetReleaseStatusOk returns a tuple with the ReleaseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileReleaseStatusItem) GetReleaseStatusOk() (*ReleaseStatus, bool) {
	if o == nil || isNil(o.ReleaseStatus) {
    return nil, false
	}
	return o.ReleaseStatus, true
}

// HasReleaseStatus returns a boolean if a field has been set.
func (o *ProfileReleaseStatusItem) HasReleaseStatus() bool {
	if o != nil && !isNil(o.ReleaseStatus) {
		return true
	}

	return false
}

// SetReleaseStatus gets a reference to the given ReleaseStatus and assigns it to the ReleaseStatus field.
func (o *ProfileReleaseStatusItem) SetReleaseStatus(v ReleaseStatus) {
	o.ReleaseStatus = &v
}

// GetAllowed returns the Allowed field value if set, zero value otherwise.
func (o *ProfileReleaseStatusItem) GetAllowed() bool {
	if o == nil || isNil(o.Allowed) {
		var ret bool
		return ret
	}
	return *o.Allowed
}

// GetAllowedOk returns a tuple with the Allowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileReleaseStatusItem) GetAllowedOk() (*bool, bool) {
	if o == nil || isNil(o.Allowed) {
    return nil, false
	}
	return o.Allowed, true
}

// HasAllowed returns a boolean if a field has been set.
func (o *ProfileReleaseStatusItem) HasAllowed() bool {
	if o != nil && !isNil(o.Allowed) {
		return true
	}

	return false
}

// SetAllowed gets a reference to the given bool and assigns it to the Allowed field.
func (o *ProfileReleaseStatusItem) SetAllowed(v bool) {
	o.Allowed = &v
}

func (o ProfileReleaseStatusItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ReleaseStatus) {
		toSerialize["releaseStatus"] = o.ReleaseStatus
	}
	if !isNil(o.Allowed) {
		toSerialize["allowed"] = o.Allowed
	}
	return json.Marshal(toSerialize)
}

type NullableProfileReleaseStatusItem struct {
	value *ProfileReleaseStatusItem
	isSet bool
}

func (v NullableProfileReleaseStatusItem) Get() *ProfileReleaseStatusItem {
	return v.value
}

func (v *NullableProfileReleaseStatusItem) Set(val *ProfileReleaseStatusItem) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileReleaseStatusItem) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileReleaseStatusItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileReleaseStatusItem(val *ProfileReleaseStatusItem) *NullableProfileReleaseStatusItem {
	return &NullableProfileReleaseStatusItem{value: val, isSet: true}
}

func (v NullableProfileReleaseStatusItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileReleaseStatusItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


