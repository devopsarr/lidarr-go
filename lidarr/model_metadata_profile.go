/*
Lidarr

Lidarr API docs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lidarr

import (
	"encoding/json"
)

// MetadataProfile struct for MetadataProfile
type MetadataProfile struct {
	Id *int32 `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	PrimaryAlbumTypes []*ProfilePrimaryAlbumTypeItem `json:"primaryAlbumTypes,omitempty"`
	SecondaryAlbumTypes []*ProfileSecondaryAlbumTypeItem `json:"secondaryAlbumTypes,omitempty"`
	ReleaseStatuses []*ProfileReleaseStatusItem `json:"releaseStatuses,omitempty"`
}

// NewMetadataProfile instantiates a new MetadataProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataProfile() *MetadataProfile {
	this := MetadataProfile{}
	return &this
}

// NewMetadataProfileWithDefaults instantiates a new MetadataProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataProfileWithDefaults() *MetadataProfile {
	this := MetadataProfile{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetadataProfile) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataProfile) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetadataProfile) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MetadataProfile) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetadataProfile) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataProfile) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MetadataProfile) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MetadataProfile) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MetadataProfile) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MetadataProfile) UnsetName() {
	o.Name.Unset()
}

// GetPrimaryAlbumTypes returns the PrimaryAlbumTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetadataProfile) GetPrimaryAlbumTypes() []*ProfilePrimaryAlbumTypeItem {
	if o == nil {
		var ret []*ProfilePrimaryAlbumTypeItem
		return ret
	}
	return o.PrimaryAlbumTypes
}

// GetPrimaryAlbumTypesOk returns a tuple with the PrimaryAlbumTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataProfile) GetPrimaryAlbumTypesOk() ([]*ProfilePrimaryAlbumTypeItem, bool) {
	if o == nil || isNil(o.PrimaryAlbumTypes) {
    return nil, false
	}
	return o.PrimaryAlbumTypes, true
}

// HasPrimaryAlbumTypes returns a boolean if a field has been set.
func (o *MetadataProfile) HasPrimaryAlbumTypes() bool {
	if o != nil && isNil(o.PrimaryAlbumTypes) {
		return true
	}

	return false
}

// SetPrimaryAlbumTypes gets a reference to the given []ProfilePrimaryAlbumTypeItem and assigns it to the PrimaryAlbumTypes field.
func (o *MetadataProfile) SetPrimaryAlbumTypes(v []*ProfilePrimaryAlbumTypeItem) {
	o.PrimaryAlbumTypes = v
}

// GetSecondaryAlbumTypes returns the SecondaryAlbumTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetadataProfile) GetSecondaryAlbumTypes() []*ProfileSecondaryAlbumTypeItem {
	if o == nil {
		var ret []*ProfileSecondaryAlbumTypeItem
		return ret
	}
	return o.SecondaryAlbumTypes
}

// GetSecondaryAlbumTypesOk returns a tuple with the SecondaryAlbumTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataProfile) GetSecondaryAlbumTypesOk() ([]*ProfileSecondaryAlbumTypeItem, bool) {
	if o == nil || isNil(o.SecondaryAlbumTypes) {
    return nil, false
	}
	return o.SecondaryAlbumTypes, true
}

// HasSecondaryAlbumTypes returns a boolean if a field has been set.
func (o *MetadataProfile) HasSecondaryAlbumTypes() bool {
	if o != nil && isNil(o.SecondaryAlbumTypes) {
		return true
	}

	return false
}

// SetSecondaryAlbumTypes gets a reference to the given []ProfileSecondaryAlbumTypeItem and assigns it to the SecondaryAlbumTypes field.
func (o *MetadataProfile) SetSecondaryAlbumTypes(v []*ProfileSecondaryAlbumTypeItem) {
	o.SecondaryAlbumTypes = v
}

// GetReleaseStatuses returns the ReleaseStatuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetadataProfile) GetReleaseStatuses() []*ProfileReleaseStatusItem {
	if o == nil {
		var ret []*ProfileReleaseStatusItem
		return ret
	}
	return o.ReleaseStatuses
}

// GetReleaseStatusesOk returns a tuple with the ReleaseStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataProfile) GetReleaseStatusesOk() ([]*ProfileReleaseStatusItem, bool) {
	if o == nil || isNil(o.ReleaseStatuses) {
    return nil, false
	}
	return o.ReleaseStatuses, true
}

// HasReleaseStatuses returns a boolean if a field has been set.
func (o *MetadataProfile) HasReleaseStatuses() bool {
	if o != nil && isNil(o.ReleaseStatuses) {
		return true
	}

	return false
}

// SetReleaseStatuses gets a reference to the given []ProfileReleaseStatusItem and assigns it to the ReleaseStatuses field.
func (o *MetadataProfile) SetReleaseStatuses(v []*ProfileReleaseStatusItem) {
	o.ReleaseStatuses = v
}

func (o MetadataProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.PrimaryAlbumTypes != nil {
		toSerialize["primaryAlbumTypes"] = o.PrimaryAlbumTypes
	}
	if o.SecondaryAlbumTypes != nil {
		toSerialize["secondaryAlbumTypes"] = o.SecondaryAlbumTypes
	}
	if o.ReleaseStatuses != nil {
		toSerialize["releaseStatuses"] = o.ReleaseStatuses
	}
	return json.Marshal(toSerialize)
}

type NullableMetadataProfile struct {
	value *MetadataProfile
	isSet bool
}

func (v NullableMetadataProfile) Get() *MetadataProfile {
	return v.value
}

func (v *NullableMetadataProfile) Set(val *MetadataProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataProfile(val *MetadataProfile) *NullableMetadataProfile {
	return &NullableMetadataProfile{value: val, isSet: true}
}

func (v NullableMetadataProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


